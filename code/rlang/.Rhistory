WE <- load('tidy_tweets_per_week.rda')
head(WE)
WE
WE <- loadRDS('tidy_tweets_per_week.rds')
WE <- load('tidy_tweets_per_week.rds')
WE
WE <- readRDS('tidy_tweets_per_week.rds')
WE
WE <- readRDS('tidy_tweets_per_week.rds')
WE
WE <- readRDS('tidy_tweets_per_week.rds')
WE
tweets_eth
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
tweets_eth
design <- rep("Eth",nrow(tweets_eth))
heatmap.2(tweets_eth, Colv=FALSE, Rowv = FALSE, col = rev(heat.colors(nrow(tweets_eth)))) #brewer.pal(n = 5, name='Set1'))
library(ExPosition)
library(InPosition)
# use the last version of PTCA
#devtools::install_github('HerveAbdi/PTCA4CATA')
library(PTCA4CATA)
library(corrplot)
library(ggplot2)
#devtools::install_github('HerveAbdi/data4PCCAR')
library(data4PCCAR)
library(corrplot)
library(RColorBrewer)
library("gplots")
heatmap.2(tweets_eth, Colv=FALSE, Rowv = FALSE, col = rev(heat.colors(nrow(tweets_eth)))) #brewer.pal(n = 5, name='Set1'))
library(tidyverse)
rownames(tweets_eth) <- tweets_eth$word
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
rownames(tweets_eth) <- tweets_eth$word
tweets_eth %<>% select(-word)
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
rownames(tweets_eth) <- tweets_eth$word
tweets_eth <- tweets_eth %>% select(-word)
tweets_eth
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
rownames(tweets_eth) <- tweets_eth$word
tweets_eth <- tweets_eth %>% select(-word)
tweets_eth
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
tweets_eth <- tweets_eth %>% column_to_rownames(word) %>% select(-word)
tweets_eth <- tweets_eth %>% column_to_rownames(var = word) %>% select(-word)
tweets_eth <- tweets_eth %>% column_to_rownames(var = 'word') %>% select(-word)
tweets_eth <- tweets_eth %>% column_to_rownames(var = 'word') %>% select(-word)
tweets_eth <- tweets_eth %>% column_to_rownames(var = 'word')
tweets_eth
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
tweets_eth
tweets_eth <- tweets_eth %>% column_to_rownames(word)
tweets_eth <- tweets_eth %>% column_to_rownames(var = 'word')
tweets_eth
tweets_eth <- as.data.frame(tweets_eth) %>% column_to_rownames(var = 'word')
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
tweets_eth <- as.data.frame(tweets_eth) %>% column_to_rownames(var = 'word')
tweets_eth
design <- rep("Eth",nrow(tweets_eth))
tweets_eth <- as.data.frame(tweets_eth) %>% column_to_rownames(var = 'word') %>% mutate(design = 'eth')
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
tweets_eth <- as.data.frame(tweets_eth) %>% column_to_rownames(var = 'word') %>% mutate(design = 'eth')
tweets_eth
tweets <- tweets_eth
tweets
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
tweets_eth <- as.data.frame(tweets_eth) %>% column_to_rownames(var = 'word') %>% mutate(design = 'eth')
tweets <- tweets_eth
tweets
rownames(tweets)
tweets_eth
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
tweets_eth <- as.data.frame(tweets_eth) %>% column_to_rownames(var = 'word') %>% mutate(design = 'eth')
tweets_eth
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
tweets_eth <- as.data.frame(tweets_eth) %>% column_to_rownames(var = 'word')
tweets <- tweets_eth
rownames(tweets)
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
tweets_eth <- as.data.frame(tweets_eth) %>% column_to_rownames(var = 'word')
tweets <- tweets_eth
tweets
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
tweets_eth <- as.data.frame(tweets_eth) %>% column_to_rownames(var = 'word')  %>% mutate(design = 'eth')
tweets <- tweets_eth
tweets
tweets_eth <- readRDS('tidy_tweets_per_week.rds')
tweets_eth <- as.data.frame(tweets_eth) %>% mutate(design = 'eth') %>% column_to_rownames(var = 'word')
tweets <- tweets_eth
tweets
design <- tweets$design
tweets <- tweets %>% select(-design)
tweets
heatmap.2(tweets_eth, Colv=FALSE, Rowv = FALSE, col = rev(heat.colors(nrow(tweets_eth)))) #brewer.pal(n = 5, name='Set1'))
heatmap.2(tweets, Colv=FALSE, Rowv = FALSE, col = rev(heat.colors(nrow(tweets_eth)))) #brewer.pal(n = 5, name='Set1'))
heatmap.2(as.matrix(tweets), Colv=FALSE, Rowv = FALSE, col = rev(heat.colors(nrow(tweets_eth)))) #brewer.pal(n = 5, name='Set1'))
heatmap.2(as.matrix(tweets), col = rev(heat.colors(nrow(tweets_eth)))) #brewer.pal(n = 5, name='Set1'))
resCA.sym  <- epCA(tweets, DESIGN = design, make_design_nominal = TRUE, symmetric = TRUE, graphs = FALSE)
# to run a plain CA but asymetric
resCA.asym <- epCA(tweets, DESIGN = design, make_design_nominal = TRUE, symmetric = FALSE, graphs = FALSE)
tweets_inf <- epCA.inference.battery(tweets, DESIGN = design, make_design_nominal = TRUE, graphs = FALSE)
tweets_inf_t <- epCA.inference.battery(t(tweets), DESIGN = design, make_design_nominal = TRUE, graphs = FALSE)
design
t(design)
tweets_inf <- epCA.inference.battery(tweets, DESIGN = t(design), make_design_nominal = TRUE, graphs = FALSE)
as.matrix(design)
design <- as.matrix(tweets$design)
tweets <- tweets %>% select(-design)
design <- as.matrix(design)
resCA.sym  <- epCA(tweets, DESIGN = design, make_design_nominal = TRUE, symmetric = TRUE, graphs = FALSE)
# to run a plain CA but asymetric
resCA.asym <- epCA(tweets, DESIGN = design, make_design_nominal = TRUE, symmetric = FALSE, graphs = FALSE)
design
tweets_inf <- epCA.inference.battery(tweets, DESIGN = design, make_design_nominal = TRUE, graphs = FALSE)
tweets_inf_t <- epCA.inference.battery(t(tweets), DESIGN = design, make_design_nominal = TRUE, graphs = FALSE)
PTCA4CATA::PlotScree(ev = resCA.sym$ExPosition.Data$eigs,
#p.ev =  we_data_inf$Inference.Data$components$p.vals,
title = 'SCREE Plot',
plotKaiser = TRUE
)
Fj.a <- resCA.asym$ExPosition.Data$fj
cj.a <- resCA.asym$ExPosition.Data$cj
ci.a <- resCA.asym$ExPosition.Data$ci
Fi   <- resCA.sym$ExPosition.Data$fi
Fj   <- resCA.sym$ExPosition.Data$fj
constraints.sym <- minmaxHelper(mat1 = Fi, mat2  = Fj)
constraints.asym <- minmaxHelper(mat1 = Fi, mat2  = Fj.a)
color4Authors <-prettyGraphsColorSelection(n.colors = nrow(ci.a))
symMap  <- createFactorMapIJ(Fi,Fj,
col.points.i = color4Authors,
col.labels.i = color4Authors)
asymMap  <- createFactorMapIJ(Fi,Fj.a,
col.points.i = color4Authors,
col.labels.i = color4Authors)
labels4CA <- createxyLabels(resCA = resCA.sym)
map.IJ.sym <- symMap$baseMap + symMap$I_labels + symMap$I_points +
symMap$J_labels + symMap$J_points + labels4CA
print(map.IJ.sym)
map.IJ.asym <- asymMap$baseMap + asymMap$I_labels +
asymMap$I_points + asymMap$J_labels +
asymMap$J_points + labels4CA
print(map.IJ.asym)
color4I <- brewer.pal(n = nrow(ci.a), name='Set3')
# baseMaps ----
ctr.I <- ci.a * sign(Fi[,1])
PTCA4CATA::PrettyBarPlot2(ctr.I[,1],
threshold = 1 / NROW(ctr.I),
font.size = 4,
color4bar = gplots::col2hex(color4I),
color4ns = 'grey',
main = 'Observations: Contributions (Signed)',
ylab = 'Contributions', ylim = c(1.2*min(ctr.I),
1.2*max(ctr.I) ),
horizontal = FALSE )
# Get some colors ----
#color4Authors <-prettyGraphsColorSelection(n.colors = nrow(ci.a))
color4J <- brewer.pal(n = nrow(cj.a), name='Set1')
# baseMaps ----
ctr.J <- cj.a * sign(Fj[,1])
PTCA4CATA::PrettyBarPlot2(ctr.J[,1],
threshold = 1 / NROW(ctr.J),
font.size = 4,
color4bar = color4J,
color4ns = 'grey',
main = 'Observations: Contributions (Signed)',
ylab = 'Contributions', ylim = c(1.2*min(ctr.J),
1.2*max(ctr.J) ),
horizontal = FALSE )
BR <- we_data_inf$Inference.Data$ fj.boots$tests$boot.ratios
resCA.sym  <- epCA(tweets, DESIGN = design, make_design_nominal = TRUE, symmetric = TRUE, graphs = FALSE)
DESIGN
design
